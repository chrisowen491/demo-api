name: CI Workflow

on:
  pull_request:
    branches:
      - main

env:
  ENV_NAME: ci1      

jobs:
  build_test_and_package:
    runs-on: ubuntu-latest
    outputs:
      tag:
        ${{steps.tag_repo.outputs.new_tag}}
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: npm install
      - name: Build
        run: npm run build
      - name: Unit Test
        run: npm run test
      - name: Archive Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage/*  
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-west-1'
      - name: SAM Package
        run: sam package --output-template-file packaged-template.yaml --s3-prefix ${{ github.repository }} --s3-bucket ${{ secrets.AWS_DEPLOY_BUCKET }}
      - name: Archive template
        uses: actions/upload-artifact@v2
        with:
          name: sam-template
          path: |
            packaged-template.yaml
            openapi.yaml
            api_tests/postman-collection.json
            env/*.json
      - name: Bump version and push tag
        id: tag_repo
        uses: anothrNick/github-tag-action@1.26.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true  
          RELEASE_BRANCHES: .* 
          INITIAL_VERSION: v1.0.0             

  update-config-repo:
    runs-on: ubuntu-latest
    needs: [build_test_and_package]
    steps:
      - uses: actions/checkout@v2
        with:
          repository: chrisowen491/config
          token: ${{ secrets.GH_TOKEN }}
          ref: master
      - name: Download sam template
        uses: actions/download-artifact@v2
        with:
          name: sam-template    
      - shell: bash
        run: mv packaged-template.yaml ci1/template.yaml  && mv openapi.yaml ci1/openapi.yaml  && mv postman-collection.json ci1/postman-collection.json
      - shell: bash
        run: mv postman-collection.json ci1/postman-collection.json  && mv env/aws-ci1.json ci1/aws-ci1.json 
      - name: Commit Changes
        continue-on-error: true
        run: |
          git config --global user.name '${{ github.repository }}/actions'
          git config --global user.email '<>'
          git add -A
          git commit -am 'Updated tranmere3 with new configuration ${{needs.build_test_and_package.outputs.tag}}'
          git push

  ci-deploy:
    runs-on: ubuntu-latest
    needs: update-config-repo
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-west-1'
      - name: Download sam template
        uses: actions/download-artifact@v2
        with:
          name: sam-template  
      - name: Set UUID
        id: generate-uuid
        uses: filipstefansson/uuid-action@v1      
      - name: OpenAPI Upload
        run: aws s3 cp openapi.yaml s3://${{ secrets.AWS_DEPLOY_BUCKET }}/${{ github.repository }}/openapi-${{ steps.generate-uuid.outputs.uuid }}.yaml             
      - name: SAM Deploy
        run:
          sam deploy --template packaged-template.yaml --tags env=$ENV_NAME --no-fail-on-empty-changeset --stack-name tranmere6-$ENV_NAME --s3-bucket ${{ secrets.AWS_DEPLOY_BUCKET }} --s3-prefix ${{ github.repository }} --parameter-overrides EnvName=ci1 S3BucketName=${{ secrets.AWS_DEPLOY_BUCKET }} OpenAPIFile=${{ github.repository }}/openapi-${{ steps.generate-uuid.outputs.uuid }}.yaml Deployment=AllAtOnce --capabilities CAPABILITY_IAM

  acceptance_test:
    runs-on: ubuntu-latest
    needs: ci-deploy
    steps:
      - name: Download sam template
        uses: actions/download-artifact@v2
        with:
          name: sam-template 
      - name: Post Deploy Checks
        run: 
          npm install newman && node ./node_modules/newman/bin/newman run ./postman-collection.json -e ./aws-$ENV_NAME.json 

  zap_scan:
    runs-on: ubuntu-latest
    name: Scan the webapplication
    needs: ci-deploy
    steps:
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: https://api.ci1.tranmere-web.com/tranmere6/        